{
  "compilerOptions": {
    /* Projects */
    "incremental": false /* Save .tsbuildinfo files to allow for incremental compilation of projects. */,

    /* Language and Environment */
    "target": "es2017" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "jsx": "react" /* Specify what JSX code is generated. */,
    "experimentalDecorators": true /* Enable experimental support for TC39 stage 2 draft decorators. */,
    "jsxFactory": "FSComponent.buildComponent" /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */,
    "jsxFragmentFactory": "FSComponent.Fragment" /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */,

    /* Modules */
    "module": "ES2015" /* Specify what module code is generated. */ /* Specify the root folder within your source files. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "rootDir": ".",
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    "noEmit": true,

    /* JavaScript Support */
    "allowJs": false /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

    /* Emit */
    "declaration": false /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "declarationMap": false /* Create sourcemaps for d.ts files. */,
    "sourceMap": false /* Create source map files for emitted JavaScript files. */,
    // "outDir": "dist" /* Specify an output folder for all emitted files. */,
    "removeComments": false /* Disable emitting comments. */,

    /* Interop Constraints */
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true /* Enable all strict type-checking options. */,

    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "exclude": ["node_modules", "dist", "tsconfig.json"],
  "ts-node": {
    // "transpileOnly": true,
    "compilerOptions": {
      "module": "CommonJS"
    }
  }
}
